package pizzeriaRicky.vista;

import java.util.HashMap;

import pizzeriaRicky.vista.IControladorVentana;
import javafx.animation.KeyFrame;
import javafx.animation.KeyValue;
import javafx.animation.Timeline;
import javafx.beans.property.DoubleProperty;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.fxml.FXMLLoader;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.layout.AnchorPane;
import javafx.util.Duration;


public class ControladorVentana extends AnchorPane{
	private HashMap<String,Node> pantallas = new HashMap<>();
	
	
	public  ControladorVentana(){
		super();
		
	}
	public void agregarPantalla(String opcion , Node pantallaFXML){
		pantallas.put(opcion, pantallaFXML);
	}
	
	public Node obtenerPantalla(String opcion){
		return pantallas.get(opcion);
		
	}

	public boolean cargarPantalla(String opcion,String ruta){
		
		try{
			FXMLLoader miCargador = new FXMLLoader(getClass().getResource(ruta));
			Parent ventanaCargada = (Parent)miCargador.load();
			IControladorVentana controladorDeLaVentana = (IControladorVentana)miCargador.getController();
			agregarPantalla(opcion,ventanaCargada);
		
			return true;
		
	   } catch(Exception e){
		   System.out.println(e.getMessage());
		return false;
		
		}
	}
	
	public boolean descargarPantalla(String opcion){
		if(pantallas.remove(opcion)==null){
			System.out.println("Noo existe la pantalla D: Panicooooooooooooooooooo");
			return false;
		}else{
			return true;
		}
		
		}
		public boolean mostrarPantalla(final String opcion){
		if(pantallas.get(opcion)!=null){
			final DoubleProperty opacidad = opacityProperty();
			if(!getChildren().isEmpty())
			
			{
			Timeline tiempo=new Timeline(
					new KeyFrame(Duration.ZERO, new KeyValue(opacidad, 1.0)),
					new KeyFrame(new Duration(1000), new EventHandler<ActionEvent>(){
						
						public void handle(ActionEvent event)
						{
							getChildren().remove(0);
							getChildren().add(0,pantallas.get(opcion));
							Timeline entrada= new Timeline(
									new KeyFrame(Duration.ZERO, new KeyValue(opacidad, 0.0)),
									new KeyFrame(new Duration(800), new KeyValue(opacidad, 1.0)));
							entrada.play();
						}
						
					}, new KeyValue(opacidad, 0.0)));
					tiempo.play();
				}else{
					setOpacity(0.0);
					getChildren().add(pantallas.get(opcion));
					Timeline entrada=new Timeline(
						new KeyFrame(Duration.ZERO, new KeyValue(opacidad, 0.0)),
						new KeyFrame(new Duration(2500), new KeyValue(opacidad, 1.0)));
						entrada.play();
			}
			return true;
		}else{
			System.out.println("No se puede cargar el archivo");
			return false;
		}
	}
	}



